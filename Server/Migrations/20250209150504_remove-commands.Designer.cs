// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScreenTemperature;

#nullable disable

namespace ScreenTemperature.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250209150504_remove-commands")]
    partial class removecommands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("ScreenTemperature.Entities.Configurations.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ApplyBrightness")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Brightness")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DevicePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBinding", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Alt")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ConfigurationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Control")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("KeyBindings");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.Configurations.ColorConfiguration", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.Configurations.Configuration");

                    b.Property<bool>("ApplyColor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("ColorConfigurations");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.Configurations.TemperatureConfiguration", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.Configurations.Configuration");

                    b.Property<bool>("ApplyIntensity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intensity")
                        .HasColumnType("INTEGER");

                    b.ToTable("TemperatureConfigurations");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBinding", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.Configurations.Configuration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.Configurations.ColorConfiguration", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.Configurations.Configuration", null)
                        .WithOne()
                        .HasForeignKey("ScreenTemperature.Entities.Configurations.ColorConfiguration", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScreenTemperature.Entities.Configurations.TemperatureConfiguration", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.Configurations.Configuration", null)
                        .WithOne()
                        .HasForeignKey("ScreenTemperature.Entities.Configurations.TemperatureConfiguration", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
